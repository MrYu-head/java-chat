package com.yychatserver.controller;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;

import com.yychat.model.Message;
import com.yychat.model.User;

public class StartServer {
	public static HashMap hmSocket=new HashMap<String,Socket>();
	
	ServerSocket ss;
	String userName;
	String passWord;
	Socket s;
	
	
	@SuppressWarnings("unchecked")
	public StartServer(){
		
		try {//捕获异常
			
			ss=new ServerSocket(3456);//设置1024以上的端口
			System.out.println("服务器启动，监听3456端口");
			while(true){
			s=ss.accept();//接收客户端的连接请求
			System.out.println("连接成功:"+s);
		
		
			
			//接收User对象
			ObjectInputStream ois=new ObjectInputStream(s.getInputStream());
			User user=(User)ois.readObject();
			userName=user.getUserName();
			passWord=user.getPassWord();
			System.out.println(user.getUserName());
			System.out.println(user.getPassWord());
			Message mess=new Message();
				mess.setSender("Server");
				mess.setReceiver(userName);
				
			//密码验证
			if(user.getPassWord().equals("123456")){//User.getPassWord()=="123456" 错误做法,判断对象相等用equals
				//告诉客户端，密码验证通过的消息，可以创建Message类
				mess.setMessageType(Message.message_LoginSuccess);
				
			}else{
				mess.setMessageType(Message.message_LoginFailure);//"0"为验证不通过
			}
			
			ObjectOutputStream oos=new ObjectOutputStream(s.getOutputStream());
			oos.writeObject(mess);
			if(user.getPassWord().equals("123456")){
				hmSocket.put(userName, s);
			new ServerReceiverThread(s).start();//就绪状态
			}
					}
			} catch (IOException | ClassNotFoundException e) {
			e.printStackTrace();//处理异常
		}
	}
}
